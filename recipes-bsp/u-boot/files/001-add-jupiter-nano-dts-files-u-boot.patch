diff --git a/arch/arm/dts/Makefile b/arch/arm/dts/Makefile
index c671082..5d72f20 100644
--- a/arch/arm/dts/Makefile
+++ b/arch/arm/dts/Makefile
@@ -922,7 +922,8 @@ dtb-$(CONFIG_TARGET_SAMA5D2_PTC_EK) += \
 	at91-sama5d2_ptc_ek.dtb
 
 dtb-$(CONFIG_TARGET_SAMA5D2_XPLAINED) += \
-	at91-sama5d2_xplained.dtb
+	at91-sama5d2_xplained.dtb \
+	at91-sama5d27_jupiter_nano.dtb
 
 dtb-$(CONFIG_TARGET_SAMA5D27_SOM1_EK) += \
 	at91-sama5d27_som1_ek.dtb   \
diff --git b/arch/arm/dts/at91-sama5d27_jupiter_nano.dts b/arch/arm/dts/at91-sama5d27_jupiter_nano.dts
new file mode 100644
index 0000000..4deb4c6
--- /dev/null
+++ b/arch/arm/dts/at91-sama5d27_jupiter_nano.dts
@@ -0,0 +1,159 @@
+/*
+ * at91-sama5d27_jupiter_nano.dts - Device Tree file for Jupiter Nano 
+ *
+ *  Copyright (C) 2017 Microchip Corporation
+ *                     Wenyou Yang <wenyou.yang@microchip.com>
+ *
+ * This file is dual-licensed: you can use it either under the terms
+ * of the GPL or the X11 license, at your option. Note that this dual
+ * licensing only applies to this file, and not this project as a
+ * whole.
+ *
+ *  a) This file is free software; you can redistribute it and/or
+ *     modify it under the terms of the GNU General Public License as
+ *     published by the Free Software Foundation; either version 2 of the
+ *     License, or (at your option) any later version.
+ *
+ *     This file is distributed in the hope that it will be useful,
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ * Or, alternatively,
+ *
+ *  b) Permission is hereby granted, free of charge, to any person
+ *     obtaining a copy of this software and associated documentation
+ *     files (the "Software"), to deal in the Software without
+ *     restriction, including without limitation the rights to use,
+ *     copy, modify, merge, publish, distribute, sublicense, and/or
+ *     sell copies of the Software, and to permit persons to whom the
+ *     Software is furnished to do so, subject to the following
+ *     conditions:
+ *
+ *     The above copyright notice and this permission notice shall be
+ *     included in all copies or substantial portions of the Software.
+ *
+ *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+ *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ *     OTHER DEALINGS IN THE SOFTWARE.
+ */
+/dts-v1/;
+#include "sama5d2.dtsi"
+#include "sama5d2-pinfunc.h"
+
+/ {
+	model = "Starcat Jupiter Nano";
+	compatible = "atmel,sama5d2-xplained", "atmel,sama5d2", "atmel,sama5";
+
+    chosen { 
+        u-boot,dm-pre-reloc; 
+        stdout-path = &uart1; 
+    }; 
+
+	ahb {
+		usb1: ohci@00400000 {
+			num-ports = <3>;
+			atmel,vbus-gpio = <&pioA 42 0>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_usb_default>;
+			status = "okay";
+		};
+
+		usb2: ehci@00500000 {
+			status = "okay";
+		};
+
+		sdmmc1: sdio-host@b0000000 {
+			bus-width = <4>;
+			pinctrl-names = "default";
+			pinctrl-0 = <&pinctrl_sdmmc1_cmd_dat_default &pinctrl_sdmmc1_ck_cd_default>;
+			status = "okay"; /* conflict with qspi0 */
+			u-boot,dm-pre-reloc;
+		};
+
+		apb {
+
+			uart1: serial@f8020000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_uart1_default>;
+				status = "okay";
+				u-boot,dm-pre-reloc;
+			};
+			
+			i2c0: i2c@f8028000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_i2c0_default>;
+				status = "okay";
+			};
+
+			i2c1: i2c@fc028000 {
+				pinctrl-names = "default";
+				pinctrl-0 = <&pinctrl_i2c1_default>;
+				status = "okay";
+				
+				pmic@5b {
+					compatible = "active-semi,act8945a";
+					reg = <0x5b>;
+					active-semi,vsel-low;
+					status = "okay";
+				};
+			};
+
+			pioA: gpio@fc038000 {
+				pinctrl {
+
+					pinctrl_sdmmc1_cmd_dat_default: sdmmc1_cmd_dat_default {
+						pinmux = <PIN_PA28__SDMMC1_CMD>,
+							 <PIN_PA18__SDMMC1_DAT0>,
+							 <PIN_PA19__SDMMC1_DAT1>,
+							 <PIN_PA20__SDMMC1_DAT2>,
+							 <PIN_PA21__SDMMC1_DAT3>;
+						bias-pull-up;
+						u-boot,dm-pre-reloc;
+					};
+
+					pinctrl_sdmmc1_ck_cd_default: sdmmc1_ck_cd_default {
+						pinmux = <PIN_PA22__SDMMC1_CK>,
+							 <PIN_PA30__SDMMC1_CD>;
+						bias-disable;
+						u-boot,dm-pre-reloc;
+					};
+
+					pinctrl_uart1_default: uart1_default {
+						pinmux = <PIN_PD2__URXD1>,
+							 <PIN_PD3__UTXD1>;
+						bias-disable;
+						u-boot,dm-pre-reloc;
+					};
+					
+					pinctrl_i2c0_default: i2c0_default {
+						pinmux = <PIN_PD21__TWD0>,
+							 <PIN_PD22__TWCK0>;
+						bias-disable;
+					};
+
+					pinctrl_i2c1_default: i2c1_default {
+						pinmux = <PIN_PD4__TWD1>,
+							 <PIN_PD5__TWCK1>;
+						bias-disable;
+					};
+
+					pinctrl_usb_default: usb_default {
+						pinmux = <PIN_PB10__GPIO>;
+						bias-disable;
+					};
+
+					pinctrl_usba_vbus: usba_vbus {
+						pinmux = <PIN_PA31__GPIO>;
+						bias-disable;
+					};
+				};
+			};
+		};
+	};
+};
diff --git b/configs/sama5d27_jupiter_nano_mmc_defconfig b/configs/sama5d27_jupiter_nano_mmc_defconfig
new file mode 100644
index 0000000..f3c0faf
--- /dev/null
+++ b/configs/sama5d27_jupiter_nano_mmc_defconfig
@@ -0,0 +1,109 @@
+CONFIG_ARM=y
+CONFIG_ARCH_AT91=y
+CONFIG_SYS_TEXT_BASE=0x23f00000
+CONFIG_TARGET_SAMA5D2_XPLAINED=y
+CONFIG_SPL_GPIO_SUPPORT=y
+CONFIG_SPL_LIBCOMMON_SUPPORT=y
+CONFIG_SPL_LIBGENERIC_SUPPORT=y
+CONFIG_SYS_MALLOC_F_LEN=0x2000
+CONFIG_SPL_MMC_SUPPORT=y
+CONFIG_SPL_SERIAL_SUPPORT=y
+CONFIG_SPL_DRIVERS_MISC_SUPPORT=y
+CONFIG_ENV_SIZE=0x4000
+CONFIG_NR_DRAM_BANKS=1
+CONFIG_SPL=y
+CONFIG_DEBUG_UART_BOARD_INIT=y
+CONFIG_DEBUG_UART_BASE=0xf8020000
+CONFIG_DEBUG_UART_CLOCK=82000000
+CONFIG_SPL_FAT_SUPPORT=y
+CONFIG_SPL_FS_FAT=y
+CONFIG_SPL_LIBDISK_SUPPORT=y
+CONFIG_DEBUG_UART=y
+CONFIG_ENV_VARS_UBOOT_CONFIG=y
+CONFIG_FIT=y
+CONFIG_SYS_EXTRA_OPTIONS="SAMA5D2"
+CONFIG_SD_BOOT=y
+CONFIG_BOOTDELAY=3
+CONFIG_USE_BOOTARGS=y
+CONFIG_MISC_INIT_R=y
+# CONFIG_DISPLAY_BOARDINFO is not set
+CONFIG_SPL_TEXT_BASE=0x200000
+CONFIG_SPL_SEPARATE_BSS=y
+CONFIG_HUSH_PARSER=y
+CONFIG_AUTOBOOT_KEYED=y		
+CONFIG_AUTOBOOT_PROMPT="Press SPACE to abort autoboot in %d seconds\n"		
+CONFIG_AUTOBOOT_DELAY_STR="d"		
+CONFIG_AUTOBOOT_STOP_STR=" "
+CONFIG_CMD_BOOTZ=y
+# CONFIG_CMD_FLASH is not set
+CONFIG_CMD_I2C=y
+# CONFIG_CMD_LOADS is not set
+CONFIG_CMD_MMC=y
+CONFIG_CMD_PART=y
+CONFIG_CMD_SF=y
+CONFIG_CMD_USB=y
+CONFIG_CMD_DHCP=y
+CONFIG_CMD_PING=y
+CONFIG_CMD_EXT4=y
+CONFIG_CMD_FAT=y
+CONFIG_CMD_FS_GENERIC=y
+CONFIG_OF_CONTROL=y
+CONFIG_SPL_OF_CONTROL=y
+CONFIG_OF_LIBFDT=y
+CONFIG_OF_LIBFDT_OVERLAY=y
+CONFIG_DEFAULT_DEVICE_TREE="at91-sama5d27_jupiter_nano"
+CONFIG_OF_SPL_REMOVE_PROPS="interrupts interrupt-parent dmas dma-names"
+CONFIG_ENV_IS_IN_FAT=y
+CONFIG_DM=y
+CONFIG_SPL_DM=y
+CONFIG_SPL_DM_SEQ_ALIAS=y
+CONFIG_CLK=y
+CONFIG_SPL_CLK=y
+CONFIG_CLK_AT91=y
+CONFIG_AT91_UTMI=y
+CONFIG_AT91_H32MX=y
+CONFIG_AT91_GENERIC_CLK=y
+CONFIG_DM_GPIO=y
+CONFIG_ATMEL_PIO4=y
+CONFIG_DM_I2C=y
+CONFIG_SYS_I2C_AT91=y
+CONFIG_DM_MMC=y
+CONFIG_MMC_SDHCI=y
+CONFIG_MMC_SDHCI_ATMEL=y
+CONFIG_DM_SPI_FLASH=y
+CONFIG_SPI_FLASH=y
+CONFIG_DM_ETH=y
+CONFIG_MACB=y
+CONFIG_PINCTRL=y
+CONFIG_SPL_PINCTRL=y
+CONFIG_PINCTRL_AT91PIO4=y
+CONFIG_DM_SERIAL=y
+CONFIG_DEBUG_UART_ATMEL=y
+CONFIG_DEBUG_UART_ANNOUNCE=y
+CONFIG_ATMEL_USART=y
+CONFIG_SPI=y
+CONFIG_DM_SPI=y
+CONFIG_ATMEL_QSPI=y
+CONFIG_TIMER=y
+CONFIG_SPL_TIMER=y
+CONFIG_ATMEL_PIT_TIMER=y
+CONFIG_USB=y
+CONFIG_DM_USB=y
+CONFIG_USB_EHCI_HCD=y
+CONFIG_USB_STORAGE=y
+CONFIG_USB_GADGET=y
+CONFIG_USB_GADGET_ATMEL_USBA=y
+CONFIG_SYS_BOARD="sama5d2_xplained"
+CONFIG_SYS_CONFIG_NAME="sama5d2_xplained"
+CONFIG_SMBIOS_PRODUCT_NAME="sama5d2_xplained"
+
+# af
+CONFIG_SAMA5D2_LPDDR2SIP_VB=y
+CONFIG_SAMA5D2_LPDDR2=y
+CONFIG_RAM_128MB=y
+CONFIG_SDCARD=y
+CONFIG_SDHC1=y
+CONFIG_JUMP_ADDR="0x23f00000"
+CONFIG_DEBUG=y
+# CONFIG_ENTER_NWD is not set
+CONFIG_BACKUP_MODE=y
diff --git a/include/configs/sama5d27_som1_ek.h b/include/configs/sama5d27_som1_ek.h
index 8942d15..0ad5634 100644
--- a/include/configs/sama5d27_som1_ek.h
+++ b/include/configs/sama5d27_som1_ek.h
@@ -27,13 +27,105 @@
 
 #define CONFIG_SYS_LOAD_ADDR		0x22000000 /* load address */
 
+/* NAND flash */
+#undef CONFIG_CMD_NAND
+
+/* SPI flash */
+
 #undef CONFIG_BOOTCOMMAND
 #ifdef CONFIG_SD_BOOT
+/* u-boot env in sd/mmc card */
+#define CONFIG_ENV_SIZE		0x4000
 /* bootstrap + u-boot + env in sd card */
-#define CONFIG_BOOTCOMMAND	"fatload mmc " CONFIG_ENV_FAT_DEVICE_AND_PART " 0x21000000 " \
-				CONFIG_DEFAULT_DEVICE_TREE ".dtb; " \
-				"fatload mmc " CONFIG_ENV_FAT_DEVICE_AND_PART " 0x22000000 zImage; " \
-				"bootz 0x22000000 - 0x21000000"
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_EXTRA_ENV_SETTINGS \
+    "initrd_high=0xffffffff\0" \
+    "fdt_high=0xffffffff\0" \
+    "fdtovaddr=0x21800000\0" \
+    "loadaddr=0x22000000\0" \
+    "fdtaddr=0x21000000\0" \
+    "fdtfile=/dtbs/at91-sama5d27_jupiter_nano.dtb\0" \
+    "enable_uboot_overlays=\0" \
+    "dtboverlay=\0" \
+    "dtboverlay1=\0" \
+    "dtboverlay2=\0" \
+    "dtboverlay3=\0" \
+    "dtboverlay4=\0" \
+    "console=ttyS0,115200\0" \
+    "optargs=\0" \
+    "video=\0" \
+    "mmcdev=0\0" \
+    "mmcpart=1\0" \
+    "mmcroot=/dev/mmcblk0p2 ro\0" \
+    "mmcrootfstype=ext4 rootwait\0" \
+    "mmcargs=setenv bootargs console=${console} " \
+        "${optargs} " \
+        "root=${mmcroot} " \
+        "rootfstype=${mmcrootfstype} " \
+        "video=${video}\0" \
+    "loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} uEnv.txt\0" \
+    "importbootenv=echo Importing environment from mmc (uEnv.txt)...; " \
+        "env import -t ${loadaddr} ${filesize}\0" \
+    "loadzimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} zImage\0" \
+    "loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdtaddr} ${fdtfile}\0" \
+    "loadoverlay=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay}\0" \
+    "loadoverlay1=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay1}\0" \
+    "loadoverlay2=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay2}\0" \
+    "loadoverlay3=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay3}\0" \
+    "loadoverlay4=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay4}\0" \
+    "mmcboot=echo Booting from mmc ...; " \
+        "run mmcargs; " \
+        "bootz ${loadaddr} - ${fdtaddr}\0"
+
+#define CONFIG_BOOTCOMMAND \
+    "mmc dev ${mmcdev};" \
+    "if mmc rescan; then " \
+        "echo SD/MMC found on device ${mmcdev};" \
+        "if run loadbootenv; then " \
+            "run importbootenv;" \
+        "fi;" \
+        "echo Running default loadzimage ...;" \
+        "if run loadzimage; then " \
+            "run loadfdt;" \
+            "echo Checking for overlays ...;" \
+            "if test -n $enable_uboot_overlays; then " \
+                "fdt addr ${fdtaddr};" \
+                "fdt resize 4096;" \
+                "if test -n $dtboverlay; then " \
+                    "run loadoverlay;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay};" \
+                "fi;" \
+                "if test -n $dtboverlay1; then " \
+                    "run loadoverlay1;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay1};" \
+                "fi;" \
+                "if test -n $dtboverlay2; then " \
+                    "run loadoverlay2;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay2};" \
+                "fi;" \
+                "if test -n $dtboverlay3; then " \
+                    "run loadoverlay3;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay3};" \
+                "fi;" \
+                "if test -n $dtboverlay4; then " \
+                    "run loadoverlay4;" \
+                    "fdt apply ${fdtovaddr};" \
+                    "echo loaded ${dtboverlay4};" \
+                "fi;" \
+            "fi;" \
+            "run mmcboot;" \
+        "fi;" \
+    "fi;"
+#endif
+
+#ifdef CONFIG_QSPI_BOOT
+#undef CONFIG_BOOTARGS
+#define CONFIG_BOOTARGS \
+	"console=ttyS0,115200 earlyprintk root=/dev/mmcblk0p2 rw rootwait"
 #endif
 
 /* SPL */
@@ -46,7 +138,12 @@
 #define CONFIG_SYS_MONITOR_LEN		(512 << 10)
 
 #ifdef CONFIG_SD_BOOT
+#define CONFIG_SYS_MMCSD_FS_BOOT_PARTITION	1
 #define CONFIG_SPL_FS_LOAD_PAYLOAD_NAME		"u-boot.img"
 #endif
 
+#ifdef CONFIG_QSPI_BOOT
+#define CONFIG_SYS_SPI_U_BOOT_OFFS	0x10000
+#endif
+
 #endif
diff --git a/include/configs/sama5d2_xplained.h b/include/configs/sama5d2_xplained.h
index 4f5ceca..9ba0aaa 100644
--- a/include/configs/sama5d2_xplained.h
+++ b/include/configs/sama5d2_xplained.h
@@ -12,8 +12,8 @@
 #include "at91-sama5_common.h"
 
 /* SDRAM */
-#define CONFIG_SYS_SDRAM_BASE           0x20000000
-#define CONFIG_SYS_SDRAM_SIZE		0x20000000
+#define CONFIG_SYS_SDRAM_BASE		0x20000000
+#define CONFIG_SYS_SDRAM_SIZE		0x8000000
 
 #ifdef CONFIG_SPL_BUILD
 #define CONFIG_SYS_INIT_SP_ADDR		0x218000
@@ -31,9 +31,55 @@
 /* bootstrap + u-boot + env in sd card */
 #undef CONFIG_BOOTCOMMAND
 
-#define CONFIG_BOOTCOMMAND	"fatload mmc " CONFIG_ENV_FAT_DEVICE_AND_PART " 0x21000000 at91-sama5d2_xplained.dtb; " \
-				"fatload mmc " CONFIG_ENV_FAT_DEVICE_AND_PART " 0x22000000 zImage; " \
-				"bootz 0x22000000 - 0x21000000"
+#define CONFIG_SUPPORT_RAW_INITRD
+#define CONFIG_EXTRA_ENV_SETTINGS \
+    "initrd_high=0xffffffff\0" \
+    "fdt_high=0xffffffff\0" \
+    "fdtovaddr=0x21800000\0" \
+    "loadaddr=0x22000000\0" \
+    "fdtaddr=0x21000000\0" \
+    "fdtfile=/dtbs/at91-sama5d27_jupiter_nano.dtb\0" \
+    "enable_uboot_overlays=\0" \
+    "dtboverlay=\0" \
+    "dtboverlay1=\0" \
+    "dtboverlay2=\0" \
+    "dtboverlay3=\0" \
+    "dtboverlay4=\0" \
+    "console=ttyS0,115200\0" \
+    "optargs=\0" \
+    "video=\0" \
+    "mmcdev=0\0" \
+    "mmcpart=1\0" \
+    "mmcroot=/dev/mmcblk0p2 ro\0" \
+    "mmcrootfstype=ext4 rootwait\0" \
+    "mmcargs=setenv bootargs console=${console} " \
+        "${optargs} " \
+        "root=${mmcroot} " \
+        "rootfstype=${mmcrootfstype} " \
+        "video=${video}\0" \
+    "loadbootenv=load mmc ${mmcdev}:${mmcpart} ${loadaddr} uEnv.txt\0" \
+    "importbootenv=echo Importing environment from mmc (uEnv.txt)...; " \
+        "env import -t ${loadaddr} ${filesize}\0" \
+    "loadzimage=load mmc ${mmcdev}:${mmcpart} ${loadaddr} zImage\0" \
+    "loadfdt=load mmc ${mmcdev}:${mmcpart} ${fdtaddr} ${fdtfile}\0" \
+    "loadoverlay=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay}\0" \
+    "loadoverlay1=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay1}\0" \
+    "loadoverlay2=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay2}\0" \
+    "loadoverlay3=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay3}\0" \
+    "loadoverlay4=load mmc ${mmcdev}:${mmcpart} ${fdtovaddr} ${dtboverlay4}\0" \
+    "mmcboot=echo Booting from mmc ...; " \
+        "run mmcargs; " \
+        "bootz ${loadaddr} - ${fdtaddr}\0"
+
+#define CONFIG_BOOTCOMMAND \
+    "mmc dev ${mmcdev};" \
+    "if mmc rescan; then " \
+        "echo SD/MMC found on device ${mmcdev};" \
+    "fi;" \
+    "mw.w 20008000 0 100000;" \
+    "fatload mmc 0 0x20008000 nuttx.bin;" \
+    "fatload mmc 0 0x20008000 nuttx.bin;" \
+    "go 0x20008040;"
 
 #elif CONFIG_SPI_BOOT
 
